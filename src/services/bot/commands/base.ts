import { Pagination } from "@discordx/pagination";
import { CommandInteraction, Message, MessageEmbed } from "discord.js";
import { MetadataStorage, SlashGroup ,
  Discord,
  Slash,
} from "discordx";


@Discord()
export class BaseCommands{
 
   /* @Slash("hello", {description: "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"})
    async hello(
        interaction: CommandInteraction
    ): Promise<void>{
        interaction.reply(`üëã –ü—Ä–∏–≤–µ—Ç, ${interaction.member}`);
    }*/

    @Slash("ping", {description: "–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–æ—Ç—è—Ä—ã"})
    async ping(
        interaction: CommandInteraction
    ): Promise<void>{
        
        interaction.reply(`–ë–æ—Ç –∂–∏–≤–æ–π, –ø–∏–Ω–≥ ${interaction.client.ws.ping} –º—Å* üõ∞Ô∏è`);
    }

    @Slash("help", {description: "–°–ø–∏—Å–æ–∫ –∫–æ–º–º–∞–Ω–¥"})
    async help(
        interaction: CommandInteraction
    ):Promise<void>{
        const commands = MetadataStorage.instance.applicationCommands.map((cmd) => {
            return { name: cmd.name, description: cmd.description };
          });
      
          const pages = commands.map((cmd, i) => {
            return new MessageEmbed()
              .setFooter({ text: `–°—Ç—Ä–∞–Ω–∏—Ü–∞ ${i + 1} –∏–∑ ${commands.length}` })
              .setTitle("**–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è**")
              .addField("–ö–æ–º–∞–Ω–¥–∞", cmd.name)
              .addField("–û–ø–∏—Å–∞–Ω–∏–µ", cmd.description);
          });
      
          const pagination = new Pagination(interaction, pages);
          await pagination.send();
    }
}